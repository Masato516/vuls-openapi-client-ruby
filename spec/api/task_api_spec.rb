=begin
#Future Vuls Public API

#Future Vuls Public API

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TaskApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TaskApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TaskApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TaskApi' do
    it 'should create an instance of TaskApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TaskApi)
    end
  end

  # unit tests for task_add_task_comment
  # addTaskComment task
  # add task comment
  # @param task_id Task ID
  # @param add_task_comment_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization api key auth
  # @return [TaskAddTaskCommentResponseBody]
  describe 'task_add_task_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for task_get_task_detail
  # getTaskDetail task
  # task detail
  # @param task_id Task ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization api key auth
  # @return [TaskGetTaskDetailResponseBody]
  describe 'task_get_task_detail test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for task_get_task_list
  # getTaskList task
  # task list
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page Number
  # @option opts [Integer] :limit Limit
  # @option opts [Integer] :offset Offset
  # @option opts [Array<String>] :filter_status Status filter
  # @option opts [Array<String>] :filter_priority Priority filter
  # @option opts [Boolean] :filter_ignore Ignore filter(trueの場合は、非表示のものを取得しない。falseの場合は全件取得)
  # @option opts [Array<Integer>] :filter_main_user_ids MainUserIDs filter
  # @option opts [Array<Integer>] :filter_sub_user_ids SubUserIDs filter
  # @option opts [String] :filter_cve_id CveID filter
  # @option opts [Integer] :filter_server_id ServerID filter
  # @option opts [Integer] :filter_role_id ServerRoleID filter
  # @option opts [Integer] :filter_pkg_id PackageID filter
  # @option opts [Integer] :filter_cpe_id CpeID filter
  # @option opts [String] :authorization api key auth
  # @return [TaskGetTaskListResponseBody]
  describe 'task_get_task_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for task_update_task
  # updateTask task
  # update task
  # @param task_id Task ID
  # @param update_task_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization api key auth
  # @return [TaskUpdateTaskResponseBody]
  describe 'task_update_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for task_update_task_ignore
  # updateTaskIgnore task
  # update task ignore
  # @param task_id Task ID
  # @param update_task_ignore_request_body 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization api key auth
  # @return [TaskUpdateTaskIgnoreResponseBody]
  describe 'task_update_task_ignore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
